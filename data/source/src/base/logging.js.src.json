[null,null,null,["logging.js","src/base/logging.js",[null,"/**"," * Bloombox JS: Logging"," *"," * @fileoverview Provides logging tools."," */",null,"/*global goog */",null,"goog.provide('bloombox.logging.error');","goog.provide('bloombox.logging.info');","goog.provide('bloombox.logging.log');","goog.provide('bloombox.logging.warn');",null,"goog.require('bloombox.DEBUG');",null,null,"/**"," * Send a log message to the console."," *"," * @param {...*} var_args Arguments to log."," */","bloombox.logging.log = function(var_args) {","  if (bloombox.DEBUG)","    console.log.apply(console, ['[Bloombox]'].concat(Array.from(arguments)));","};",null,null,"/**"," * Send an INFO-level message to the console."," *"," * @param {...*} var_args Arguments to log."," */","bloombox.logging.info = function(var_args) {","  if (bloombox.DEBUG)","    console.info.apply(console, ['[Bloombox]'].concat(Array.from(arguments)));","};",null,null,"/**"," * Send a WARN-level message to the console."," *"," * @param {...*} var_args Arguments to log."," */","bloombox.logging.warn = function(var_args) {","  console.warn.apply(console, ['[Bloombox]'].concat(Array.from(arguments)));","};",null,null,"/**"," * Send an ERROR-level message to the console."," *"," * @param {...*} var_args Arguments to log."," */","bloombox.logging.error = function(var_args) {","  console.error.apply(console, ['[Bloombox]'].concat(Array.from(arguments)));","};"]]]